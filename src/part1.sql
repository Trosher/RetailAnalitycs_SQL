CREATE TABLE Customer (
    Customer_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    Customer_Name VARCHAR(255) NOT null CHECK (Customer_Name ~ '^[A-ZÀ-ß¨][a-zà-ÿ¸\- ]*$'),
    Customer_Surname VARCHAR(255) NOT null CHECK (Customer_Surname ~ '^[A-ZÀ-ß¨¸][a-zà-ÿ¸\- ]*$'),
    Customer_Primary_Email VARCHAR(255) NOT null CHECK (Customer_Primary_Email ~ '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}$'),
    Customer_Primary_Phone VARCHAR(15) NOT null CHECK (Customer_Primary_Phone ~ '^[+]7[0-9]{10}$')
);

CREATE TABLE Customer_Card (
    Customer_Card_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    Customer_ID BIGINT NOT NULL REFERENCES Customer(Customer_ID)
);

CREATE TABLE Transaction (
    Transaction_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    Customer_Card_ID BIGINT NOT NULL REFERENCES Customer_Card(Customer_Card_ID),
    Transaction_Summ DOUBLE PRECISION NOT NULL CHECK (Transaction_Summ >= 0),
    Transaction_DateTime TIMESTAMP WITH TIME ZONE,
    Transaction_Store_ID BIGINT NOT NULL
);

CREATE TABLE Transaction_Detail (
    Transaction_ID BIGINT NOT NULL REFERENCES Transaction(Transaction_ID),
    SKU_ID NUMERIC NOT NULL,
    SKU_Amount NUMERIC NOT NULL CHECK (SKU_Amount > 0),
    SKU_Summ NUMERIC NOT NULL CHECK (SKU_Summ >= 0),
    SKU_Summ_Paid NUMERIC NOT NULL CHECK (SKU_Summ_Paid >= 0),
    SKU_Discount NUMERIC NOT NULL CHECK (SKU_Discount >= 0)
);

CREATE TABLE Product_Group (
    Group_ID SERIAL PRIMARY KEY,
    Group_Name VARCHAR(255) CHECK (Group_Name ~ '^[à-ÿÀ-ß¸¨0-9!@#$%^&*()_+\-=\[\]{};:"\\|,.<>\/?]*|[a-zA-Z0-9!@#$%^&*()_+\-=\[\]{};:"\\|,.<>\/?]*$')
);

CREATE TABLE Product (
    SKU_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    SKU_Name TEXT NOT NULL,
    Group_ID BIGINT NOT NULL references Product_Group (Group_ID)
);

CREATE TABLE Store_Product (
    Transaction_Store_ID INT,
    SKU_ID INT,
    SKU_Purchase_Price NUMERIC CHECK (SKU_Purchase_Price >= 0),
    SKU_Retail_Price NUMERIC CHECK (SKU_Retail_Price >= 0),
    PRIMARY KEY (Transaction_Store_ID, SKU_ID),
    FOREIGN KEY (Transaction_Store_ID) REFERENCES Transaction(Transaction_ID),
    FOREIGN KEY (SKU_ID) REFERENCES Product(SKU_ID)
);

CREATE TABLE Analysis (
    Analysis_Formation TIMESTAMP  WITHOUT TIME ZONE NOT NULL
);

create table Segments (
    Segments serial unique primary key,
    Average_check varchar not null,
    Frequency_of_purchases varchar not null,
    Churn_probability varchar not null
);

create or replace procedure Export(tableName varchar, filePath varchar, delimiter varchar)
as $$
  begin
    execute format('copy %s TO ''%s'' DELIMITER ''%s'' tsv HEADER;',
    tableName, filePath, delimiter);
  end;
$$ language plpgsql;

create or replace procedure ImportDataFromCsv(
    tableName varchar,
    filePath varchar,
    delimiter varchar)
as $$
  begin
    execute format('COPY %s FROM ''%s'' DELIMITER ''%s'' CSV HEADER;',
    tableName, filePath, delimiter);
  end;
$$ language plpgsql;

CREATE OR REPLACE PROCEDURE ImportDataFromTsv(
    table_name VARCHAR,
    file_path VARCHAR,
    delimiter VARCHAR
)
as $$
BEGIN
    IF table_name = 'Transactions' OR table_name = 'AnalysisDate' THEN
        EXECUTE FORMAT('COPY %s FROM ''%s'' DELIMITER E''%s'' CSV;', table_name, file_path, delimiter);
    else
        execute format('COPY %s FROM ''%s'' DELIMITER ''%s'' CSV;;', table_name, file_path, delimiter);
    END IF;
END;
$$ LANGUAGE plpgsql;

call ImportDataFromTsv('Customer', 'C:\Users\User\Desktop\SQL3_RetailAnalitycs_v1.0-1\datasets\Personal_Data_Mini.tsv', '	');
call ImportDataFromTsv('Customer_Card', 'C:\Users\User\Desktop\SQL3_RetailAnalitycs_v1.0-1\datasets\Cards_Mini.tsv', '	');
call ImportDataFromTsv('Transaction', 'C:\Users\User\Desktop\SQL3_RetailAnalitycs_v1.0-1\datasets\Transactions_Mini.tsv', '	');
call ImportDataFromTsv('Analysis', 'C:\Users\User\Desktop\SQL3_RetailAnalitycs_v1.0-1\datasets\Date_Of_Analysis_Formation.tsv', '	');
call ImportDataFromTsv('Transaction_Detail', 'C:\Users\User\Desktop\SQL3_RetailAnalitycs_v1.0-1\datasets\Checks_Mini.tsv', '	');
call ImportDataFromTsv('Product_Group', 'C:\Users\User\Desktop\SQL3_RetailAnalitycs_v1.0-1\datasets\Groups_SKU_Mini.tsv', '	');
call ImportDataFromTsv('Product', 'C:\Users\User\Desktop\SQL3_RetailAnalitycs_v1.0-1\datasets\SKU_Mini.tsv', '	');
call ImportDataFromTsv('Store_Product', 'C:\Users\User\Desktop\SQL3_RetailAnalitycs_v1.0-1\datasets\Stores_Mini.tsv', '	');


INSERT INTO Segments (Segments, Average_check, Frequency_of_purchases, Churn_probability)
VALUES
    (1, 'Low', 'Rarely', 'Low'),
	(2, 'Low', 'Rarely', 'Medium'),
    (3,'Low','Rarely','High'),
    (4,'Low','Occasionally','Low'),
    (5,'Low','Occasionally','Medium'),
    (6,'Low','Occasionally','High'),
    (7,'Low','Often','Low'),
    (8,'Low','Often','Medium'),
    (9,'Low','Often','High'),
    (10,'Medium','Rarely','Low'),
    (11,'Medium','Rarely','Medium'),
    (12,'Medium','Rarely','High'),
	(13,'Medium','Occasionally','Low'),
	(14,'Medium','Occasionally','Medium'),
	(15,'Medium','Occasionally','High'),
	(16,'Medium','Often','Low'),
	(17,'Medium','Often','Medium'),
	(18,'Medium','Often','High'),
	(19,'High','Rarely','Low'),
	(20,'High','Rarely','Medium'),
	(21,'High','Rarely','High'),
	(22,'High','Occasionally','Low'),
	(23, 'High', 'Occasionally', 'Medium'),
	(24, 'High', 'Occasionally', 'High'),
	(25, 'High', 'Often', 'Low'),
	(26, 'High', 'Often', 'Medium'),
	(27, 'High', 'Often', 'High');

INSERT INTO Customer (Customer_Name, Customer_Surname, Customer_Primary_Email, Customer_Primary_Phone)
VALUES
    ('John', 'Doe', 'john.doe@example.com', '+71234567890'),
    ('Alice', 'Smith', 'alice.smith@example.com', '+79234567890'),
    ('Bob', 'Johnson', 'bob.johnson@example.com', '+79345678901'),
    ('Eva', 'Williams', 'eva.williams@example.com', '+79456789012'),
    ('Michael', 'Brown', 'michael.brown@example.com', '+79567890123'),
    ('Olivia', 'Jones', 'olivia.jones@example.com', '+79678901234'),
    ('Daniel', 'Clark', 'daniel.clark@example.com', '+79789012345'),
    ('Sophia', 'Lewis', 'sophia.lewis@example.com', '+79890123456'),
    ('William', 'Miller', 'william.miller@example.com', '+79901234567'),
    ('Emma', 'Taylor', 'emma.taylor@example.com', '+70012345678');

INSERT INTO Customer_Card (Customer_ID)
VALUES
    (1),
    (2),
    (3),
    (4),
    (5),
    (6),
    (7),
    (8),
    (9),
    (10);
   
INSERT INTO Product_Group (Group_Name)
VALUES
    ('Dairy'),
    ('Bakery'),
    ('Beverages'),
    ('Snacks'),
    ('Produce'),
    ('Frozen Foods'),
    ('Meat'),
    ('Personal Care'),
    ('Household'),
    ('Electronics');

INSERT INTO Product (SKU_Name, Group_ID)
VALUES
    ('Milk', 1),
    ('Bread', 2),
    ('Soda', 3),
    ('Chips', 4),
    ('Apples', 5),
    ('Frozen Pizza', 6),
    ('Chicken Breast', 7),
    ('Shampoo', 8),
    ('Toilet Paper', 9),
    ('Laptop', 10);

   
INSERT INTO Transaction (Customer_Card_ID, Transaction_Summ, Transaction_DateTime, Transaction_Store_ID)
VALUES
    (1, 50.00, '2023-01-01 08:30:00', 1),
    (2, 25.00, '2023-01-02 12:15:00', 2),
    (3, 30.00, '2023-01-03 16:45:00', 3),
    (4, 15.00, '2023-01-04 09:20:00', 1),
    (5, 40.00, '2023-01-05 14:00:00', 2),
    (6, 20.00, '2023-01-06 18:30:00', 3),
    (7, 35.00, '2023-01-07 10:45:00', 1),
    (8, 10.00, '2023-01-08 13:10:00', 2),
    (9, 45.00, '2023-01-09 17:00:00', 3),
    (1, 28.00, '2023-01-10 11:30:00', 1),
    (2, 50.00, '2023-01-11 08:30:00', 1),
    (3, 45.00, '2023-01-12 12:15:00', 2),
    (4, 35.00, '2023-01-13 16:45:00', 3),
    (5, 25.00, '2023-01-14 09:20:00', 1),
    (6, 30.00, '2023-01-15 14:00:00', 2),
    (7, 10.00, '2023-01-16 18:30:00', 3),
    (8, 15.00, '2023-01-17 10:45:00', 1),
    (9, 12.00, '2023-01-18 13:10:00', 2);


INSERT INTO Store_Product (Transaction_Store_ID, SKU_ID, SKU_Purchase_Price, SKU_Retail_Price)
VALUES
    (1, 1, 1.50, 2.00),
    (1, 2, 2.00, 3.00),
    (2, 3, 1.80, 2.50),
    (2, 4, 3.50, 4.50),
    (3, 5, 1.20, 1.80),
    (3, 6, 4.00, 5.50),
    (1, 7, 6.50, 8.00),
    (2, 8, 2.50, 3.50),
    (3, 9, 5.00, 6.50),
    (1, 10, 800.00, 1000.00);
   
INSERT INTO Transaction_Detail (Transaction_ID, SKU_ID, SKU_Amount, SKU_Summ, SKU_Summ_Paid, SKU_Discount)
VALUES
    (1, 1, 2, 20.00, 20.00, 10),
    (2, 2, 1, 10.00, 10.00, 20),
    (3, 3, 3, 30.00, 30.00, 25),
    (4, 4, 1, 15.00, 15.00, 4),
    (5, 5, 4, 40.00, 40.00, 1),
    (6, 6, 2, 20.00, 20.00, 60),
    (7, 7, 1, 35.00, 35.00, 30),
    (8, 8, 1, 10.00, 10.00, 12),
    (9, 9, 5, 45.00, 45.00, 23),
    (10, 10, 2, 28.00, 28.00, 8);
    
INSERT INTO Analysis (Analysis_Formation)
VALUES
    ('21.08.2022 13:10:46');
